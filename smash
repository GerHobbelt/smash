#!/usr/bin/env node

var smash = require("./"),
    optimist = require("optimist");

var argv = optimist
    .usage("Usage: \033[1msmash\033[0m [options] [file â€¦]\n\n"

+ "Version: " + smash.version + "\n\n"

+ "Concatenates one or more input files, outputting a single merged file.\n"
+ "Any import statements in the input files are expanded in-place to the\n"
+ "contents of the imported file. If the same file is imported multiple\n"
+ "times, only the first instance of the file is included.")

    .options("list", {
      describe: "ouput a list of imported files",
      type: "boolean",
      default: false
    })
    .options("graph", {
      describe: "ouput the import network in Makefile format",
      type: "boolean",
      default: false
    })
    .options("help", {
      describe: "display this helpful message",
      type: "boolean",
      default: false
    })
    .check(function(argv) {
      if (argv.list && argv.graph) throw new Error("--list and --graph are exclusive");
    })
    .demand(1)
    .argv;

if (argv.help) return optimist.showHelp();

if (argv.graph) return void smash.readGraph(argv._, function(error, files) {
  if (error) throw error;
  for (var file in files) console.log(file + ": " + files[file].join(" "));
});

if (argv.list) return void smash.readAllImports(argv._, function(error, files) {
  if (error) throw error;
  console.log(files.join("\n"));
});

smash(argv._).pipe(process.stdout);
